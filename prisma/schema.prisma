// Prisma schema for Vercel Postgres deployment
// datasource and generator

datasource db {
  provider  = "postgresql"
  // PRISMA_DATABASE_URL: Prisma Accelerate/Data Proxy
  url       = env("PRISMA_DATABASE_URL")
  // DATABASE_URL: direct connection string for migrations
  directUrl = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  firstName String?
  lastName  String?
  phone     String?
  address   String?
  city      String?
  country   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders    Order[]
  quotes    Quote[]
  payments  Payment[]

  @@map("users")
}

model Quote {
  quoteId     String  @id
  amountUSDT  String
  network     String
  address     String
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  status      String
  txHash      String?
  userId      String?
  // Rate locking metadata
  fiatCurrency String?
  fiatAmount   String?
  rate         String?
  rateProvider String?
  rateAt       DateTime?

  user        User?   @relation(fields: [userId], references: [id], onDelete: SetNull)
  orders      Order[]
  payment     Payment?

  @@index([userId])
  @@map("quotes")
}

model Order {
  orderId   String   @id
  quoteId   String
  userId   String?
  status    String
  totalUSDT String
  createdAt DateTime @default(now())

  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  quote     Quote    @relation(fields: [quoteId], references: [quoteId], onDelete: Cascade)
  payment   Payment?

  @@index([quoteId])
  @@index([userId])
  @@map("orders")
}

model Payment {
  id             String   @id @default(cuid())
  orderId        String?  @unique
  quoteId        String   @unique
  userId         String?
  network        String
  address        String
  memo           String?
  expectedAmount String
  amountReceived String?
  status         String   // pending | submitted | confirmed | expired | failed | underpaid | overpaid
  txHash         String?
  confirmations  Int?     // rempli manuellement si besoin
  provider       String?  // "manual"
  notesAdmin     String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user   User?  @relation(fields: [userId], references: [id], onDelete: SetNull)
  quote  Quote  @relation(fields: [quoteId], references: [quoteId], onDelete: Cascade)
  order  Order? @relation(fields: [orderId], references: [orderId], onDelete: SetNull)

  @@index([orderId])
  @@index([userId])
  @@map("payments")
}
